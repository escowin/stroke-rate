import{j as e,l as D,m as A,c as R}from"./index-BKQi3Haz.js";import{r as m,R as V}from"./charts-BpM2RLF_.js";import{c as w,b as O,a as z,F as L}from"./sessionAnalytics-aaUY-49P.js";import{g as $,F as B}from"./progressTracking-2kONbrC3.js";import"./react-vendor-gH-7aFTg.js";import"./utils-DFjofOtR.js";import"./ui-vendor-D6OEOlG4.js";function Z({title:f,titleId:a,...c},l){return m.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:l,"aria-labelledby":a},c),f?m.createElement("title",{id:a},f):null,m.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m.75 12 3 3m0 0 3-3m-3 3v-6m-1.5-9H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z"}))}const J=m.forwardRef(Z);function U({title:f,titleId:a,...c},l){return m.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:l,"aria-labelledby":a},c),f?m.createElement("title",{id:a},f):null,m.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z"}))}const y=m.forwardRef(U);class T{static exportSessionsCSV(a){if(a.length===0)return"";const c=["Session ID","Start Time","End Time","Duration (minutes)","Rower Count","Data Points","Is Active"],l=a.map(t=>[t.id,t.startTime.toISOString(),t.endTime?.toISOString()||"",t.endTime?Math.floor((t.endTime.getTime()-t.startTime.getTime())/1e3/60):0,t.rowers.length,t.finalHeartRateData?.length||t.heartRateData.length,t.isActive?"Yes":"No"]);return this.arrayToCSV([c,...l.map(t=>t.map(n=>String(n)))])}static exportHeartRateDataCSV(a){if(a.length===0)return"";const c=["Device ID","Heart Rate (BPM)","Timestamp","Zone","Battery Level","Session ID"],l=a.map(t=>[t.deviceId,t.heartRate,t.timestamp.toISOString(),t.zone,t.batteryLevel||"",t.sessionId||""]);return this.arrayToCSV([c,...l.map(t=>t.map(n=>String(n)))])}static exportAnalyticsCSV(a,c){if(a.length===0)return"";const l=["Session ID","Date","Duration (min)","Avg Heart Rate","Max Heart Rate","Min Heart Rate","TRIMP","TSS","Intensity Factor","Normalized Power","Recovery Time (hrs)","HRV","Recovery Score","Performance Score","Consistency Score","Effort Score","Crew Sync","Crew Cohesion","Recovery Zone %","Aerobic Zone %","Threshold Zone %","Anaerobic Zone %"],t=a.filter(n=>n.finalHeartRateData&&n.finalHeartRateData.length>0).map(n=>{const s=w(n,c);return[n.id,n.startTime.toISOString().split("T")[0],s.duration,s.avgHeartRate,s.maxHeartRate,s.minHeartRate,s.trimp,s.tss,s.intensityFactor,s.normalizedPower,s.recoveryTime,s.heartRateVariability,s.recoveryScore,s.performanceScore,s.consistencyScore,s.effortScore,s.crewSynchronization,s.crewCohesion,s.zoneDistribution.recovery,s.zoneDistribution.aerobic,s.zoneDistribution.threshold,s.zoneDistribution.anaerobic]});return this.arrayToCSV([l,...t.map(n=>n.map(s=>String(s)))])}static exportProgressDataCSV(a){const c=["Period Start","Period End","Duration (days)","Total Sessions","Crew Progress %","Sync Trend","Sync Change Rate %/week","Sync Confidence %","Cohesion Trend","Cohesion Change Rate %/week","Cohesion Confidence %","Performance Trend","Performance Change Rate %/week","Performance Confidence %","Key Improvements","Areas of Concern","Recommendations","Next Phase Focus"],l=[a.period.startDate.toISOString().split("T")[0],a.period.endDate.toISOString().split("T")[0],a.period.duration,a.totalSessions,a.crewProgress.overallProgress,a.crewProgress.synchronizationTrend.direction,a.crewProgress.synchronizationTrend.changeRate,a.crewProgress.synchronizationTrend.confidence,a.crewProgress.cohesionTrend.direction,a.crewProgress.cohesionTrend.changeRate,a.crewProgress.cohesionTrend.confidence,a.crewProgress.performanceTrend.direction,a.crewProgress.performanceTrend.changeRate,a.crewProgress.performanceTrend.confidence,a.insights.keyImprovements.join("; "),a.insights.areasOfConcern.join("; "),a.insights.recommendations.join("; "),a.insights.nextPhaseFocus];return this.arrayToCSV([c,l.map(t=>String(t))])}static exportRowerProgressCSV(a){if(a.individualProgress.length===0)return"";const c=["Rower ID","Rower Name","Seat","Overall Progress %","Avg HR Trend","Avg HR Change Rate %/week","Avg HR Confidence %","Max HR Trend","Max HR Change Rate %/week","Max HR Confidence %","TRIMP Trend","TRIMP Change Rate %/week","TRIMP Confidence %","Consistency Trend","Consistency Change Rate %/week","Consistency Confidence %","Effort Trend","Effort Change Rate %/week","Effort Confidence %","Strengths","Improvement Areas"],l=a.individualProgress.map(t=>{const n=t.trends.find(o=>o.metric==="metrics.avgHeartRate"),s=t.trends.find(o=>o.metric==="metrics.maxHeartRate"),x=t.trends.find(o=>o.metric==="metrics.trimp"),d=t.trends.find(o=>o.metric==="metrics.consistencyScore"),h=t.trends.find(o=>o.metric==="metrics.effortScore");return[t.rowerId,t.rowerName,t.seat,t.overallProgress,n?.direction||"stable",n?.changeRate||0,n?.confidence||0,s?.direction||"stable",s?.changeRate||0,s?.confidence||0,x?.direction||"stable",x?.changeRate||0,x?.confidence||0,d?.direction||"stable",d?.changeRate||0,d?.confidence||0,h?.direction||"stable",h?.changeRate||0,h?.confidence||0,t.strengths.join("; "),t.improvementAreas.join("; ")]});return this.arrayToCSV([c,...l.map(t=>t.map(n=>String(n)))])}static exportDataJSON(a){return JSON.stringify(a,null,2)}static createExportData(a,c,l,t){let n=a;t.dateRange&&(n=a.filter(o=>o.startTime>=t.dateRange.startDate&&o.startTime<=t.dateRange.endDate)),t.sessionIds&&(n=n.filter(o=>t.sessionIds.includes(o.id)));let s=c;t.dateRange&&(s=c.filter(o=>o.timestamp>=t.dateRange.startDate&&o.timestamp<=t.dateRange.endDate)),t.sessionIds&&(s=s.filter(o=>o.sessionId&&t.sessionIds.includes(o.sessionId)));const x=n.filter(o=>o.finalHeartRateData&&o.finalHeartRateData.length>0).map(o=>w(o,l)),d=new Map;n.forEach(o=>{o.rowers.forEach(g=>{d.set(g.id,g)})});let h;return t.includeProgressData&&(h=$(n,l,[],[],30)),{sessions:n,heartRateData:s,analytics:x,progressData:h,metadata:{exportDate:new Date,totalSessions:n.length,totalDataPoints:s.length,dateRange:{start:t.dateRange?.startDate||new Date(Math.min(...a.map(o=>o.startTime.getTime()))),end:t.dateRange?.endDate||new Date(Math.max(...a.map(o=>o.startTime.getTime())))},rowers:Array.from(d.values())}}}static arrayToCSV(a){return a.map(c=>c.map(l=>{const t=l.toString().replace(/"/g,'""');return t.includes(",")||t.includes('"')||t.includes(`
`)?`"${t}"`:t}).join(",")).join(`
`)}static downloadFile(a,c,l){const t=new Blob([a],{type:l}),n=URL.createObjectURL(t),s=document.createElement("a");s.href=n,s.download=c,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)}static async exportData(a,c,l,t){const n=this.createExportData(a,c,l,t);if(t.format==="json"){const s=this.exportDataJSON(n),x=`stroke-rate-export-${new Date().toISOString().split("T")[0]}.json`;this.downloadFile(s,x,"application/json")}else{const s=new Date().toISOString().split("T")[0],x=this.exportSessionsCSV(n.sessions);if(this.downloadFile(x,`sessions-${s}.csv`,"text/csv"),t.includeHeartRateData){const d=this.exportHeartRateDataCSV(n.heartRateData);this.downloadFile(d,`heart-rate-data-${s}.csv`,"text/csv")}if(t.includeAnalytics){const d=this.exportAnalyticsCSV(n.sessions,l);this.downloadFile(d,`analytics-${s}.csv`,"text/csv")}if(t.includeProgressData&&n.progressData){const d=this.exportProgressDataCSV(n.progressData);this.downloadFile(d,`progress-data-${s}.csv`,"text/csv");const h=this.exportRowerProgressCSV(n.progressData);this.downloadFile(h,`rower-progress-${s}.csv`,"text/csv")}}}static getExportStats(a,c){const l=a.length,t=c.length,n=a.map(g=>g.startTime.getTime()),s={start:new Date(Math.min(...n)),end:new Date(Math.max(...n))},h=l*1e3+t*50,o=this.formatBytes(h);return{totalSessions:l,totalDataPoints:t,dateRange:s,dataSize:o}}static formatBytes(a){if(a===0)return"0 Bytes";const c=1024,l=["Bytes","KB","MB","GB"],t=Math.floor(Math.log(a)/Math.log(c));return parseFloat((a/Math.pow(c,t)).toFixed(2))+" "+l[t]}}const _=({className:f=""})=>{const{sessions:a,getSessionHeartRateData:c}=O(),{zones:l}=z(),[t,n]=m.useState(!1),[s,x]=m.useState({format:"csv",includeHeartRateData:!0,includeAnalytics:!0,includeProgressData:!0,dateRange:void 0,rowerIds:void 0,sessionIds:void 0}),[d,h]=m.useState({startDate:"",endDate:""}),[o,g]=m.useState([]),[j,N]=m.useState([]),[S,b]=m.useState(!1),[v,C]=m.useState([]);V.useEffect(()=>{(async()=>{try{const i=[];for(const p of a){const M=await c(p.id);i.push(...M)}C(i)}catch(i){console.error("Failed to load heart rate data:",i)}})()},[a,c]);const u=m.useMemo(()=>T.getExportStats(a,v),[a,v]),P=m.useMemo(()=>{const r=new Map;return a.forEach(i=>{i.rowers.forEach(p=>{r.set(p.id,{id:p.id,name:p.name,seat:p.seat})})}),Array.from(r.values()).sort((i,p)=>i.seat-p.seat)},[a]),k=m.useMemo(()=>a.filter(r=>r.finalHeartRateData&&r.finalHeartRateData.length>0).sort((r,i)=>i.startTime.getTime()-r.startTime.getTime()).slice(0,20),[a]),H=async()=>{n(!0);try{const r={...s,dateRange:d.startDate&&d.endDate?{startDate:new Date(d.startDate),endDate:new Date(d.endDate)}:void 0,rowerIds:o.length>0?o:void 0,sessionIds:j.length>0?j:void 0};await T.exportData(a,v,l,r)}catch(r){console.error("Export failed:",r),alert("Export failed. Please try again.")}finally{n(!1)}},E=r=>{g(i=>i.includes(r)?i.filter(p=>p!==r):[...i,r])},I=r=>{N(i=>i.includes(r)?i.filter(p=>p!==r):[...i,r])},F=()=>{h({startDate:"",endDate:""}),g([]),N([])};return e.jsxs("div",{className:`data-export ${f}`,children:[e.jsx("section",{className:"card-base export-header",children:e.jsxs("div",{className:"export-header-content",children:[e.jsxs("h2",{className:"export-header-title",children:[e.jsx(D,{className:"export-header-icon"}),"Data Export"]}),e.jsx("p",{className:"export-header-description",children:"Export your training data for external analysis, backup, or sharing"})]})}),e.jsxs("section",{className:"card-base export-stats",children:[e.jsxs("h3",{className:"card-title",children:[e.jsx(y,{className:"card-title-icon"}),"Export Statistics"]}),e.jsxs("div",{className:"export-stats-grid",children:[e.jsxs("div",{className:"export-stat",children:[e.jsx("span",{className:"export-stat-label",children:"Total Sessions"}),e.jsx("span",{className:"export-stat-value",children:u.totalSessions})]}),e.jsxs("div",{className:"export-stat",children:[e.jsx("span",{className:"export-stat-label",children:"Data Points"}),e.jsx("span",{className:"export-stat-value",children:u.totalDataPoints.toLocaleString()})]}),e.jsxs("div",{className:"export-stat",children:[e.jsx("span",{className:"export-stat-label",children:"Date Range"}),e.jsxs("span",{className:"export-stat-value",children:[u.dateRange.start.toLocaleDateString()," - ",u.dateRange.end.toLocaleDateString()]})]}),e.jsxs("div",{className:"export-stat",children:[e.jsx("span",{className:"export-stat-label",children:"Estimated Size"}),e.jsx("span",{className:"export-stat-value",children:u.dataSize})]})]})]}),e.jsxs("section",{className:"card-base export-options",children:[e.jsxs("h3",{className:"card-title",children:[e.jsx(A,{className:"card-title-icon"}),"Export Options"]}),e.jsxs("div",{className:"export-options-content",children:[e.jsxs("div",{className:"export-option-group",children:[e.jsx("h4",{className:"export-option-group-title",children:"Export Format"}),e.jsxs("div",{className:"export-format-options",children:[e.jsxs("label",{className:"export-format-option",children:[e.jsx("input",{type:"radio",name:"format",value:"csv",checked:s.format==="csv",onChange:r=>x(i=>({...i,format:r.target.value})),className:"export-format-radio"}),e.jsxs("div",{className:"export-format-content",children:[e.jsx(J,{className:"export-format-icon"}),e.jsxs("div",{className:"export-format-info",children:[e.jsx("span",{className:"export-format-name",children:"CSV Files"}),e.jsx("span",{className:"export-format-description",children:"Multiple CSV files for Excel/Google Sheets"})]})]})]}),e.jsxs("label",{className:"export-format-option",children:[e.jsx("input",{type:"radio",name:"format",value:"json",checked:s.format==="json",onChange:r=>x(i=>({...i,format:r.target.value})),className:"export-format-radio"}),e.jsxs("div",{className:"export-format-content",children:[e.jsx(R,{className:"export-format-icon"}),e.jsxs("div",{className:"export-format-info",children:[e.jsx("span",{className:"export-format-name",children:"JSON File"}),e.jsx("span",{className:"export-format-description",children:"Single JSON file for developers"})]})]})]})]})]}),e.jsxs("div",{className:"export-option-group",children:[e.jsx("h4",{className:"export-option-group-title",children:"Include Data"}),e.jsxs("div",{className:"export-data-options",children:[e.jsxs("label",{className:"export-data-option",children:[e.jsx("input",{type:"checkbox",checked:s.includeHeartRateData,onChange:r=>x(i=>({...i,includeHeartRateData:r.target.checked})),className:"export-data-checkbox"}),e.jsx("span",{className:"export-data-label",children:"Heart Rate Data"}),e.jsx("span",{className:"export-data-description",children:"Raw heart rate measurements"})]}),e.jsxs("label",{className:"export-data-option",children:[e.jsx("input",{type:"checkbox",checked:s.includeAnalytics,onChange:r=>x(i=>({...i,includeAnalytics:r.target.checked})),className:"export-data-checkbox"}),e.jsx("span",{className:"export-data-label",children:"Session Analytics"}),e.jsx("span",{className:"export-data-description",children:"TRIMP, TSS, recovery metrics"})]}),e.jsxs("label",{className:"export-data-option",children:[e.jsx("input",{type:"checkbox",checked:s.includeProgressData,onChange:r=>x(i=>({...i,includeProgressData:r.target.checked})),className:"export-data-checkbox"}),e.jsx("span",{className:"export-data-label",children:"Progress Tracking"}),e.jsx("span",{className:"export-data-description",children:"Trends and progress analysis"})]})]})]}),e.jsxs("div",{className:"export-option-group",children:[e.jsxs("div",{className:"export-advanced-header",children:[e.jsx("h4",{className:"export-option-group-title",children:"Advanced Filters"}),e.jsxs("button",{className:"export-advanced-toggle",onClick:()=>b(!S),children:[S?"Hide":"Show"," Advanced"]})]}),S&&e.jsxs("div",{className:"export-advanced-content",children:[e.jsxs("div",{className:"export-filter-group",children:[e.jsxs("h5",{className:"export-filter-title",children:[e.jsx(B,{className:"export-filter-icon"}),"Date Range"]}),e.jsxs("div",{className:"export-date-range",children:[e.jsxs("div",{className:"export-date-input",children:[e.jsx("label",{className:"export-date-label",children:"Start Date"}),e.jsx("input",{type:"date",value:d.startDate,onChange:r=>h(i=>({...i,startDate:r.target.value})),className:"export-date-field"})]}),e.jsxs("div",{className:"export-date-input",children:[e.jsx("label",{className:"export-date-label",children:"End Date"}),e.jsx("input",{type:"date",value:d.endDate,onChange:r=>h(i=>({...i,endDate:r.target.value})),className:"export-date-field"})]})]})]}),e.jsxs("div",{className:"export-filter-group",children:[e.jsxs("h5",{className:"export-filter-title",children:[e.jsx(L,{className:"export-filter-icon"}),"Rowers"]}),e.jsx("div",{className:"export-rower-selection",children:P.map(r=>e.jsxs("label",{className:"export-rower-option",children:[e.jsx("input",{type:"checkbox",checked:o.includes(r.id),onChange:()=>E(r.id),className:"export-rower-checkbox"}),e.jsxs("span",{className:"export-rower-label",children:[r.name," (Seat ",r.seat,")"]})]},r.id))})]}),e.jsxs("div",{className:"export-filter-group",children:[e.jsxs("h5",{className:"export-filter-title",children:[e.jsx(R,{className:"export-filter-icon"}),"Sessions"]}),e.jsx("div",{className:"export-session-selection",children:k.map(r=>e.jsxs("label",{className:"export-session-option",children:[e.jsx("input",{type:"checkbox",checked:j.includes(r.id),onChange:()=>I(r.id),className:"export-session-checkbox"}),e.jsxs("span",{className:"export-session-label",children:[r.startTime.toLocaleDateString()," ",r.startTime.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),e.jsxs("span",{className:"export-session-details",children:["(",r.rowers.length," rowers, ",r.finalHeartRateData?.length||0," data points)"]})]})]},r.id))})]}),e.jsx("div",{className:"export-filter-actions",children:e.jsx("button",{className:"export-reset-button",onClick:F,children:"Reset Filters"})})]})]})]})]}),e.jsx("section",{className:"card-base export-actions",children:e.jsxs("div",{className:"export-actions-content",children:[e.jsxs("div",{className:"export-actions-info",children:[e.jsx("h4",{className:"export-actions-title",children:"Ready to Export"}),e.jsx("p",{className:"export-actions-description",children:s.format==="csv"?"Multiple CSV files will be downloaded":"A single JSON file will be downloaded"})]}),e.jsx("div",{className:"export-actions-buttons",children:e.jsx("button",{className:"export-button",onClick:H,disabled:t,children:t?e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"export-button-spinner"}),"Exporting..."]}):e.jsxs(e.Fragment,{children:[e.jsx(D,{className:"export-button-icon"}),"Export Data"]})})})]})}),e.jsxs("section",{className:"card-base export-info",children:[e.jsxs("h3",{className:"card-title",children:[e.jsx(y,{className:"card-title-icon"}),"Export Information"]}),e.jsxs("div",{className:"export-info-content",children:[e.jsxs("div",{className:"export-info-section",children:[e.jsx("h4",{className:"export-info-title",children:"CSV Format"}),e.jsxs("ul",{className:"export-info-list",children:[e.jsx("li",{children:"• Sessions data: Basic session information and metadata"}),e.jsx("li",{children:"• Heart Rate Data: Raw heart rate measurements with timestamps"}),e.jsx("li",{children:"• Analytics: TRIMP, TSS, recovery metrics, and performance scores"}),e.jsx("li",{children:"• Progress Data: Trend analysis and progress tracking"}),e.jsx("li",{children:"• Rower Progress: Individual rower performance trends"})]})]}),e.jsxs("div",{className:"export-info-section",children:[e.jsx("h4",{className:"export-info-title",children:"JSON Format"}),e.jsxs("ul",{className:"export-info-list",children:[e.jsx("li",{children:"• Complete data structure with all relationships"}),e.jsx("li",{children:"• Includes metadata and export information"}),e.jsx("li",{children:"• Suitable for developers and custom analysis tools"}),e.jsx("li",{children:"• Preserves all data types and timestamps"})]})]}),e.jsxs("div",{className:"export-info-section",children:[e.jsx("h4",{className:"export-info-title",children:"Compatibility"}),e.jsxs("ul",{className:"export-info-list",children:[e.jsx("li",{children:"• CSV files work with Excel, Google Sheets, and Numbers"}),e.jsx("li",{children:"• JSON files work with any programming language"}),e.jsx("li",{children:"• Data is exported in UTC timezone"}),e.jsx("li",{children:"• All numeric values use standard decimal notation"})]})]})]})]})]})};export{_ as DataExport};
