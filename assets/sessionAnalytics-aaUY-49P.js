import{r as h}from"./charts-BpM2RLF_.js";import{n as I,o as x,p as D,q as T,r as N,s as F,t as q,v as L,w as B,x as j,y as G,z as O,A as W,C as _,D as J,E as K,G as U,H as Q,I as X,J as Y,K as $}from"./index-BKQi3Haz.js";function ee({title:e,titleId:t,...a},n){return h.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:n,"aria-labelledby":t},a),e?h.createElement("title",{id:t},e):null,h.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"}))}const ve=h.forwardRef(ee),Re=e=>{const t=h.useMemo(()=>e?.age?N(e.age,e.restingHeartRate,e.maxHeartRate):I(190,60),[e?.age,e?.restingHeartRate,e?.maxHeartRate]);return{zones:t,getZoneForHeartRate:r=>T(r,t),getZoneColor:r=>D(r,t),getZoneName:r=>x(r,t)}},be=(e=190,t=60)=>{const a=h.useMemo(()=>I(e,t),[e,t]);return{zones:a,getZoneForHeartRate:i=>T(i,a),getZoneColor:i=>D(i,a),getZoneName:i=>x(i,a)}},pe=()=>{const[e,t]=h.useState(!1),[a,n]=h.useState(!1),[o,r]=h.useState(null),[i,u]=h.useState([]),s=h.useCallback(async()=>{if(e)try{n(!0);const c=await F();u(c)}catch(c){r(c instanceof Error?c.message:"Failed to load sessions")}finally{n(!1)}},[e]);h.useEffect(()=>{(async()=>{try{n(!0),await $(),t(!0)}catch(l){r(l instanceof Error?l.message:"Failed to initialize database")}finally{n(!1)}})()},[]),h.useEffect(()=>{s()},[s]);const m=h.useCallback(async c=>{if(e)try{await q(c)}catch(l){r(l instanceof Error?l.message:"Failed to store heart rate data")}},[e]),g=h.useCallback(async c=>{if(e)try{await L(c)}catch(l){r(l instanceof Error?l.message:"Failed to store heart rate data batch")}},[e]),d=h.useCallback(async c=>{if(!e)return[];try{return await B(c)}catch(l){return r(l instanceof Error?l.message:"Failed to retrieve session heart rate data"),[]}},[e]),f=h.useCallback(async(c,l)=>{if(!e)return[];try{return await j(c,l)}catch(b){return r(b instanceof Error?b.message:"Failed to retrieve device heart rate data"),[]}},[e]),v=h.useCallback(async(c,l,b)=>{if(!e)return[];try{return await G(c,l,b)}catch(z){return r(z instanceof Error?z.message:"Failed to retrieve heart rate data in range"),[]}},[e]),p=h.useCallback(async c=>{if(e)try{await O(c)}catch(l){r(l instanceof Error?l.message:"Failed to store training session")}},[e]),S=h.useCallback(async()=>{if(!e)return[];try{return await F()}catch(c){return r(c instanceof Error?c.message:"Failed to retrieve sessions"),[]}},[e]),y=h.useCallback(async c=>{if(e)try{return await W(c)}catch(l){r(l instanceof Error?l.message:"Failed to retrieve session");return}},[e]),R=h.useCallback(async(c=10)=>{if(!e)return[];try{return await _(c)}catch(l){return r(l instanceof Error?l.message:"Failed to retrieve recent sessions"),[]}},[e]),M=h.useCallback(async c=>{if(e)try{await J(c)}catch(l){r(l instanceof Error?l.message:"Failed to store rower profile")}},[e]),H=h.useCallback(async()=>{if(!e)return[];try{return await K()}catch(c){return r(c instanceof Error?c.message:"Failed to retrieve rower profiles"),[]}},[e]),Z=h.useCallback(async c=>{if(e)try{return await U(c)}catch(l){r(l instanceof Error?l.message:"Failed to retrieve rower profile");return}},[e]),E=h.useCallback(async c=>{if(e)try{await Q(c)}catch(l){r(l instanceof Error?l.message:"Failed to delete session")}},[e]),w=h.useCallback(async()=>{if(!e)return null;try{return await X()}catch(c){return r(c instanceof Error?c.message:"Failed to retrieve database statistics"),null}},[e]),C=h.useCallback(async()=>{if(e)try{await Y()}catch(c){r(c instanceof Error?c.message:"Failed to clear database")}},[e]);return{isInitialized:e,isLoading:a,error:o,sessions:i,storeHeartRate:m,storeHeartRateBatch:g,getSessionHeartRateData:d,getDeviceHeartRateData:f,getHeartRateDataInTimeRange:v,storeTrainingSession:p,getAllTrainingSessions:S,getTrainingSession:y,getRecentTrainingSessions:R,deleteTrainingSession:E,storeRowerProfile:M,getAllRowerProfiles:H,getRowerProfile:Z,getStats:w,clearDatabase:C}},V=(e,t,a)=>{if(e.length===0||a===0)return 0;const n=e.reduce((i,u)=>i+u.heartRate,0)/e.length,o=n/t,r=a*n*.64*Math.exp(1.92*o);return Math.round(r)},te=e=>Math.round(e/100*100),re=(e,t)=>t===0?0:Math.round(e/t*100)/100,ae=(e,t)=>{if(e.length===0)return 0;const n=e.reduce((r,i)=>r+i.heartRate,0)/e.length/t,o=Math.pow(n,3)*300;return Math.round(o)},k=(e,t,a)=>{const n={recovery:0,aerobic:0,threshold:0,anaerobic:0};e.forEach(u=>{const s=u.heartRate;s<=t.recovery.max?n.recovery++:s<=t.aerobic.max?n.aerobic++:s<=t.threshold.max?n.threshold++:n.anaerobic++});const o=e.length,r={recovery:o>0?Math.round(n.recovery/o*100):0,aerobic:o>0?Math.round(n.aerobic/o*100):0,threshold:o>0?Math.round(n.threshold/o*100):0,anaerobic:o>0?Math.round(n.anaerobic/o*100):0},i={recovery:o>0?Math.round(n.recovery/o*a):0,aerobic:o>0?Math.round(n.aerobic/o*a):0,threshold:o>0?Math.round(n.threshold/o*a):0,anaerobic:o>0?Math.round(n.anaerobic/o*a):0};return{zoneDistribution:r,timeInZones:i}},ne=e=>{if(e.length<2)return 0;const t=[];for(let o=1;o<e.length;o++){const r=e[o].heartRate-e[o-1].heartRate;t.push(r*r)}const a=t.reduce((o,r)=>o+r,0)/t.length,n=Math.sqrt(a);return Math.round(n*100)/100},oe=(e,t)=>{const n=t/100*12;return Math.round((2+n)*10)/10},se=(e,t,a,n)=>{const o=Math.min(e*10,50),r=Math.max(0,30-(t-2)*2),i=Math.max(0,20-(n-40)*.5),u=o+r+i;return Math.min(Math.round(u),100)},ie=(e,t,a,n)=>{const o=e/t,i={recovery:{min:.5,max:.6},aerobic:{min:.6,max:.7},threshold:{min:.7,max:.8},anaerobic:{min:.8,max:1}}[n],u=Math.max(0,100-Math.abs(o-(i.min+i.max)/2)*200),s=Math.min(a/60*20,20);return Math.min(Math.round(u+s),100)},A=e=>{if(e.length<2)return 0;const t=e.map(i=>i.heartRate),a=t.reduce((i,u)=>i+u,0)/t.length,n=t.reduce((i,u)=>i+Math.pow(u-a,2),0)/t.length,o=Math.sqrt(n),r=Math.max(0,100-o/a*100);return Math.round(r)},P=(e,t,a)=>{const n=e/t,o=Math.min(a/60,1),r=n*o*100;return Math.round(Math.min(r,100))},ce=(e,t)=>{if(t.length<2)return 100;const a=new Map;t.forEach(s=>{s.deviceId&&a.set(s.deviceId,e.filter(m=>m.deviceId===s.deviceId))});const n=new Map;e.forEach(s=>{const m=s.timestamp.getTime();n.has(m)||n.set(m,[]),n.get(m).push(s.heartRate)});let o=0,r=0;if(n.forEach(s=>{if(s.length>=2){const m=s.reduce((d,f)=>d+f,0)/s.length,g=s.reduce((d,f)=>d+Math.pow(f-m,2),0)/s.length;o+=g,r++}}),r===0)return 0;const i=o/r,u=Math.max(0,100-i/100);return Math.round(u)},le=(e,t)=>{const a=[],n=new Map;e.forEach(r=>{const i=r.timestamp.getTime();n.has(i)||n.set(i,0),n.set(i,n.get(i)+r.heartRate)});const o=new Map;return n.forEach((r,i)=>{const u=e.filter(s=>s.timestamp.getTime()===i).length;o.set(i,r/u)}),t.forEach(r=>{if(!r.deviceId)return;const i=e.filter(d=>d.deviceId===r.deviceId);if(i.length===0)return;let u=0,s=0;i.forEach(d=>{const f=d.timestamp.getTime(),v=o.get(f);v!==void 0&&(u+=Math.pow(d.heartRate-v,2),s++)});const m=s>0?u/s:0,g=Math.max(0,100-Math.sqrt(m)/10);a.push({rowerId:r.id,rowerName:r.name,seat:r.seat,variance:Math.round(Math.sqrt(m)*100)/100,consistency:Math.round(g)})}),a},ue=(e,t)=>{const a=e.finalHeartRateData||e.heartRateData;if(a.length===0)return he();const n=e.endTime?Math.floor((e.endTime.getTime()-e.startTime.getTime())/1e3/60):0,o=a.map(l=>l.heartRate),r=Math.round(o.reduce((l,b)=>l+b,0)/o.length),i=Math.max(...o),u=Math.min(...o),s=e.rowers[0]?.maxHeartRate||180,m=e.rowers[0]?.restingHeartRate||60,g=V(a,s,n),d=te(g),f=re(r,s),v=ae(a,s),{zoneDistribution:p,timeInZones:S}=k(a,t,n),y=ne(a),R=oe(g,d),M=se(y,R,s,m),H=ie(r,s,n,"aerobic"),Z=A(a),E=P(r,s,n),w=ce(a,e.rowers),C=w,c=le(a,e.rowers);return{duration:n,totalDataPoints:a.length,avgHeartRate:r,maxHeartRate:i,minHeartRate:u,trimp:g,tss:d,intensityFactor:f,normalizedPower:v,zoneDistribution:p,timeInZones:S,recoveryTime:R,heartRateVariability:y,recoveryScore:M,performanceScore:H,consistencyScore:Z,effortScore:E,crewSynchronization:w,crewCohesion:C,individualVariance:c}},he=()=>({duration:0,totalDataPoints:0,avgHeartRate:0,maxHeartRate:0,minHeartRate:0,trimp:0,tss:0,intensityFactor:0,normalizedPower:0,zoneDistribution:{recovery:0,aerobic:0,threshold:0,anaerobic:0},timeInZones:{recovery:0,aerobic:0,threshold:0,anaerobic:0},recoveryTime:0,heartRateVariability:0,recoveryScore:0,performanceScore:0,consistencyScore:0,effortScore:0,crewSynchronization:0,crewCohesion:0,individualVariance:[]}),Se=(e,t)=>{const a=ue(e,t),n=e.rowers.map(u=>{const s=(e.finalHeartRateData||e.heartRateData).filter(y=>y.deviceId===u.deviceId);if(s.length===0)return{rowerId:u.id,rowerName:u.name,seat:u.seat,metrics:{avgHeartRate:0,maxHeartRate:0,minHeartRate:0,trimp:0,timeInZones:{recovery:0,aerobic:0,threshold:0,anaerobic:0},zoneDistribution:{recovery:0,aerobic:0,threshold:0,anaerobic:0},consistencyScore:0,effortScore:0}};const m=s.map(y=>y.heartRate),g=Math.round(m.reduce((y,R)=>y+R,0)/m.length),d=Math.max(...m),f=Math.min(...m),v=V(s,u.maxHeartRate||180,a.duration),{zoneDistribution:p,timeInZones:S}=k(s,t,a.duration);return{rowerId:u.id,rowerName:u.name,seat:u.seat,metrics:{avgHeartRate:g,maxHeartRate:d,minHeartRate:f,trimp:v,timeInZones:S,zoneDistribution:p,consistencyScore:A(s),effortScore:P(g,d,a.duration)}}}),r={primaryTrainingZone:Object.entries(a.zoneDistribution).reduce((u,[s,m])=>m>u.percentage?{zone:s,percentage:m}:u,{zone:"aerobic",percentage:0}).zone,trainingEffectiveness:a.performanceScore,improvementAreas:me(a),strengths:de(a)},i={synchronization:a.crewSynchronization,cohesion:a.crewCohesion,performance:a.performanceScore,recommendations:ge(a)};return{sessionId:e.id,sessionDate:e.startTime.toLocaleDateString(),sessionTime:e.startTime.toLocaleTimeString(),duration:a.duration,rowerCount:e.rowers.length,overallMetrics:a,rowerAnalytics:n,crewAnalysis:i,insights:r}},me=e=>{const t=[];return e.consistencyScore<70&&t.push("Focus on maintaining steady heart rate during training"),e.crewSynchronization<80&&t.push("Work on crew synchronization and pacing"),e.zoneDistribution.aerobic<60&&t.push("Increase time in aerobic zone for base building"),e.recoveryScore<60&&t.push("Improve recovery between training sessions"),t},de=e=>{const t=[];return e.consistencyScore>=80&&t.push("Excellent heart rate consistency"),e.crewSynchronization>=85&&t.push("Strong crew synchronization"),e.performanceScore>=80&&t.push("High training effectiveness"),e.effortScore>=75&&t.push("Good training intensity"),t},ge=e=>{const t=[];return e.crewSynchronization<70&&t.push("Practice stroke rate synchronization drills"),e.individualVariance.some(a=>a.variance>15)&&t.push("Address individual pacing differences"),e.zoneDistribution.threshold>40&&t.push("Consider more aerobic base training"),t};export{ve as F,be as a,pe as b,ue as c,V as d,k as e,P as f,Se as g,A as h,Re as u};
